name: "Build sops-nix for various systems"

on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/sops.yaml

  schedule:
    - cron: '00 00 * * *'

jobs:
  linux:
    strategy:
      matrix:
        arch: [ x86_64, aarch64 ]
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0

    - name: Install Nix
      uses: cachix/install-nix-action@v16
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

    - name: Set up cache
      uses: cachix/cachix-action@v10
      with:
        name: cmacrae
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Get the latest derivation
      run: |
        nix show-derivation github:Mic92/sops-nix#packages.${{ matrix.arch }}-linux.sops-install-secrets > ${{ matrix.arch }}-linux.drv

    - name: Get the latest commit
      run: >-
        curl -s
        --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'
        https://api.github.com/repos/Mic92/sops-nix/commits/master |
        jq -r '.sha' > sops-latest-commit-${{ matrix.arch }}-linux
 
    - name: Cache the latest derivation
      uses: actions/cache@v2
      id: linux-drv
      with:
        path: ./${{ matrix.arch }}-linux.drv
        key: ${{ matrix.arch }}-linux-drv-${{ hashFiles(format('{0}-linux.drv', matrix.arch)) }}

    - name: Cache the latest commit
      uses: actions/cache@v2
      id: latest-commit-linux
      with:
        path: ./sops-latest-commit
        key: latest-commit-linux-${{ matrix.arch }}-${{ hashFiles(format('sops-latest-commit-{0}-linux', matrix.arch)) }}

    - name: Set up builders
      if: steps.linux-drv.outputs.cache-hit != 'true' || steps.latest-commit-linux.outputs.cache-hit != 'true' 
      run: |
        DEBIAN_FRONTEND=noninteractive
        sudo apt-get update -q -y && sudo apt-get install -q -y qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static
        mkdir -p ~/.config/nix
        sudo bash -c "echo system-features = aarch64-linux arm-linux >> /etc/nix/nix.conf"

    - name: Build Linux
      if: steps.linux-drv.outputs.cache-hit != 'true' || steps.latest-commit-linux.outputs.cache-hit != 'true' 
      run: |
        nix build -L -j4 --option system ${{ matrix.arch }}-linux --option sandbox false --extra-platforms ${{ matrix.arch }}-linux github:Mic92/sops-nix#packages.${{ matrix.arch }}-linux.sops-install-secrets
